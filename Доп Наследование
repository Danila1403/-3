import math

class Figure:
    sides_count = 0

    def __init__(self, color, *sides):
        self._color = color
        self._sides = list(sides) if len(sides) == self.sides_count else [1] * self.sides_count
        self.filled = False

    def get_color(self):
        return self._color

    def _is_valid_color(self, r, g, b):
        return all(0 <= value <= 255 for value in (r, g, b))

    def set_color(self, r, g, b):
        if self._is_valid_color(r, g, b):
            self._color = [r, g, b]

    def get_sides(self):
        return self._sides

    def set_sides(self, *new_sides):
        if len(new_sides) == self.sides_count:
            self._sides = list(new_sides)

    def is_valid_sides(self, *new_sides):
        return len(new_sides) == self.sides_count

    def __len__(self):
        return sum(self._sides)


class Circle(Figure):
    sides_count = 1

    def __init__(self, color, radius):
        super().__init__(color, radius)

    def get_square(self):
        radius = self._sides[0]
        return math.pi * (radius ** 2)


class Triangle(Figure):
    sides_count = 3

    def __init__(self, color, *sides):
        super().__init__(color, *sides)

    def get_square(self):
        a, b, c = self._sides
        s = sum(self._sides) / 2
        return math.sqrt(s * (s - a) * (s - b) * (s - c))


class Cube(Figure):
    sides_count = 12

    def __init__(self, color, edge_length):
        super().__init__(color, *([edge_length] * self.sides_count))

    def get_volume(self):
        edge = self._sides[0]
        return edge ** 3


# Проверки
circle1 = Circle([200, 200, 100], 10)
circle1.set_color(55, 66, 77)  
circle1.set_sides(15)  
triangle1 = Triangle([100, 150, 200], 3, 4, 5)
triangle1.set_color(222, 35, 130)  
triangle1.set_sides(6, 8, 10) 
cube1 = Cube([222, 35, 130], 6)
cube1.set_color(300, 70, 15)  
cube1.set_sides(5, 3, 12, 4, 5)  
cube1.set_sides(15)  

# Вывод данных
print(circle1.get_color())  
print(triangle1.get_color()) 
print(cube1.get_sides())  
print(circle1.get_sides())  
print(len(circle1))  
print(cube1.get_volume())  
